{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/helpers/resolver.js","dummy/tests/integration/components/x-tabs-pane-data-test.js","dummy/tests/integration/components/x-tabs-pane-test.js","dummy/tests/integration/components/x-tabs-panes-test.js","dummy/tests/integration/components/x-tabs-tab-test.js","dummy/tests/integration/components/x-tabs-tabs-test.js","dummy/tests/integration/components/x-tabs-test.js","dummy/tests/integration/helpers/eq-test.js","dummy/tests/lint/app.lint-test.js","dummy/tests/lint/templates.template.lint-test.js","dummy/tests/lint/tests.lint-test.js","dummy/tests/page-object.js","dummy/tests/test-helper.js","dummy/tests/unit/mixins/component-child-test.js","dummy/tests/unit/mixins/component-parent-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/helpers/resolver\", [\"exports\", \"dummy/resolver\", \"dummy/config/environment\"], function (_exports, _resolver, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n  var _default = resolver;\n  _exports.default = _default;\n});","define(\"dummy/tests/integration/components/x-tabs-pane-data-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)()\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs-pane-data', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{x-tabs-pane-data}}\n                */\n                {\n                  id: \"Ab6PDXhG\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[23,\\\"x-tabs-pane-data\\\"],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 2:\n                assert.equal(page.text, ''); // Template block usage:\n\n                _context.next = 5;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  \n                      {{#x-tabs-pane-data}}\n                        template block text\n                      {{/x-tabs-pane-data}}\n                    \n                */\n                {\n                  id: \"dX65+YCE\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs-pane-data\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 5:\n                assert.equal(page.text, 'template block text');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/x-tabs-pane-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)()\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs-pane', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{x-tabs-pane}}\n                */\n                {\n                  id: \"xkB78nWW\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[23,\\\"x-tabs-pane\\\"],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 2:\n                assert.equal(page.text, ''); // Template block usage:\n\n                _context.next = 5;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  \n                      {{#x-tabs-pane}}\n                        template block text\n                      {{/x-tabs-pane}}\n                    \n                */\n                {\n                  id: \"QR7RIoOz\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs-pane\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 5:\n                assert.equal(page.text, 'template block text');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/x-tabs-panes-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)()\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs-panes', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{x-tabs-panes}}\n                */\n                {\n                  id: \"hFoxSz4r\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[23,\\\"x-tabs-panes\\\"],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 2:\n                assert.equal(page.text, ''); // Template block usage:\n\n                _context.next = 5;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  \n                      {{#x-tabs-panes}}\n                        template block text\n                      {{/x-tabs-panes}}\n                    \n                */\n                {\n                  id: \"QbEH2T+I\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs-panes\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 5:\n                assert.equal(page.text, 'template block text');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/x-tabs-tab-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)()\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs-tab', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.set('api', {\n                  selectAction: function selectAction() {}\n                });\n                _context.next = 3;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{x-tabs-tab api=api}}\n                */\n                {\n                  id: \"M3rOptXK\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[29,\\\"x-tabs-tab\\\",null,[[\\\"api\\\"],[[25,[\\\"api\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 3:\n                assert.equal(page.text, ''); // Template block usage:\n\n                _context.next = 6;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  \n                      {{#x-tabs-tab api=api}}\n                        template block text\n                      {{/x-tabs-tab}}\n                    \n                */\n                {\n                  id: \"uxjL98ts\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs-tab\\\",null,[[\\\"api\\\"],[[25,[\\\"api\\\"]]]],{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 6:\n                assert.equal(page.text, 'template block text');\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/x-tabs-tabs-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)()\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs-tabs', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{x-tabs-tabs}}\n                */\n                {\n                  id: \"20fltTyZ\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[23,\\\"x-tabs-tabs\\\"],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 2:\n                assert.equal(page.text, ''); // Template block usage:\n\n                _context.next = 5;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  \n                      {{#x-tabs-tabs}}\n                        template block text\n                      {{/x-tabs-tabs}}\n                    \n                */\n                {\n                  id: \"+LsvGRvr\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs-tabs\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 5:\n                assert.equal(page.text, 'template block text');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/x-tabs-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-cli-page-object\"], function (_qunit, _emberQunit, _testHelpers, _emberCliPageObject) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var page = (0, _emberCliPageObject.create)({\n    text: (0, _emberCliPageObject.text)(),\n    switchClick: (0, _emberCliPageObject.clickable)(\"#switch\"),\n    sectionCount: (0, _emberCliPageObject.count)(\"section\"),\n    tabs: (0, _emberCliPageObject.collection)('nav > ul > li', {\n      text: (0, _emberCliPageObject.text)('a > span'),\n      isCurrentTab: (0, _emberCliPageObject.hasClass)(\"tab-current\", \"\")\n    }),\n    content: (0, _emberCliPageObject.collection)('.content-wrap > section', {\n      isCurrentContent: (0, _emberCliPageObject.hasClass)(\"content-current\")\n    }),\n    navCount: (0, _emberCliPageObject.count)(\"nav\")\n  });\n  (0, _qunit.module)('Integration | Component | x-tabs', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    var homeTab = 0,\n        archiveTab = 1;\n    hooks.beforeEach( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _testHelpers.render)(Ember.HTMLBars.template(\n              /*\n                \n                  {{#x-tabs tab-style=tabStyle as | xt | }}\n                  \n                  {{!-- tab content --}}\n                    {{#xt.tabs as | tabs |}}\n                      {{#tabs.tab name=\"home\"}}\n                        <i class=\"icon icon-home\"></i>\n                        <span>Home</span>\n                      {{/tabs.tab}}\n                      {{#tabs.tab name=\"archive\"}}\n                        <i class=\"icon icon-box\"></i>\n                        <span>Archive</span>\n                      {{/tabs.tab}}\n                    {{/xt.tabs}}\n                  \n                    {{!-- tab content --}}\n                    {{#xt.panes as | panes |}}\n                      {{#panes.pane name=\"home\"}}\n                        <h1>Home</h1>\n                        <p>This is home content</p>\n                      {{/panes.pane}}\n                      {{#panes.pane name=\"archive\"}}\n                        <h1>Archive</h1>\n                        <p>This is archive content</p>\n                      {{/panes.pane}}\n                    {{/xt.panes}}\n                    <div id=\"activeName\">{{xt.activeName}}</div>\n                    <div id=\"switch\" onclick={{action xt.api.selectAction \"archive\"}}></div>\n                  {{/x-tabs}}\n                \n              */\n              {\n                id: \"SdxK6aTE\",\n                block: \"{\\\"symbols\\\":[\\\"xt\\\",\\\"panes\\\",\\\"tabs\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"x-tabs\\\",null,[[\\\"tab-style\\\"],[[25,[\\\"tabStyle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\\n\\\"],[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,1,[\\\"tabs\\\"]],\\\"expected `xt.tabs` to be a contextual component but found a string. Did you mean `(component xt.tabs)`? (L5:C9) \\\"],null]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,3,[\\\"tab\\\"]],\\\"expected `tabs.tab` to be a contextual component but found a string. Did you mean `(component tabs.tab)`? (L6:C11) \\\"],null]],[[\\\"name\\\"],[\\\"home\\\"]],{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-home\\\"],[9],[10],[0,\\\"\\\\n          \\\"],[7,\\\"span\\\"],[9],[0,\\\"Home\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,3,[\\\"tab\\\"]],\\\"expected `tabs.tab` to be a contextual component but found a string. Did you mean `(component tabs.tab)`? (L10:C11) \\\"],null]],[[\\\"name\\\"],[\\\"archive\\\"]],{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-box\\\"],[9],[10],[0,\\\"\\\\n          \\\"],[7,\\\"span\\\"],[9],[0,\\\"Archive\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[0,\\\"    \\\\n\\\"],[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,1,[\\\"panes\\\"]],\\\"expected `xt.panes` to be a contextual component but found a string. Did you mean `(component xt.panes)`? (L17:C9) \\\"],null]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,2,[\\\"pane\\\"]],\\\"expected `panes.pane` to be a contextual component but found a string. Did you mean `(component panes.pane)`? (L18:C11) \\\"],null]],[[\\\"name\\\"],[\\\"home\\\"]],{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Home\\\"],[10],[0,\\\"\\\\n          \\\"],[7,\\\"p\\\"],[9],[0,\\\"This is home content\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[29,\\\"-assert-implicit-component-helper-argument\\\",[[24,2,[\\\"pane\\\"]],\\\"expected `panes.pane` to be a contextual component but found a string. Did you mean `(component panes.pane)`? (L22:C11) \\\"],null]],[[\\\"name\\\"],[\\\"archive\\\"]],{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Archive\\\"],[10],[0,\\\"\\\\n          \\\"],[7,\\\"p\\\"],[9],[0,\\\"This is archive content\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"activeName\\\"],[9],[1,[24,1,[\\\"activeName\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"switch\\\"],[12,\\\"onclick\\\",[29,\\\"action\\\",[[24,0,[]],[24,1,[\\\"api\\\",\\\"selectAction\\\"]],\\\"archive\\\"],null]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n                meta: {}\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    function assertActiveTab(assert, tabIndex) {\n      assert.ok(page.tabs.objectAt(tabIndex).isCurrentTab, 'tab is active');\n      assert.ok(page.content.objectAt(tabIndex).isCurrentContent, 'tab pane is active');\n    }\n\n    function assertInActiveTab(assert, tabIndex) {\n      assert.notOk(page.tabs.objectAt(tabIndex).isCurrentTab, 'tab is inactive');\n      assert.notOk(page.content.objectAt(tabIndex).isCurrentContent, 'tab pane is inactive');\n    }\n\n    (0, _qunit.test)('it generates tab navigation', function (assert) {\n      assert.equal(page.navCount, 1, 'has tabs navigation');\n      assert.equal(page.tabs.length, 2, 'has tabs navigation items');\n      assert.equal(page.tabs.objectAt(homeTab).text, 'Home', 'navigation item shows pane title');\n      assert.equal(page.tabs.objectAt(archiveTab).text, 'Archive', 'navigation item shows pane title');\n    });\n    (0, _qunit.test)('first tab is active by default', function (assert) {\n      assertActiveTab(assert, homeTab);\n      assertInActiveTab(assert, archiveTab);\n    });\n    (0, _qunit.test)('Selecting a tab displays correct pane', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return page.switchClick();\n\n              case 2:\n                assertInActiveTab(assert, homeTab);\n                assertActiveTab(assert, archiveTab);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/helpers/eq-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('helper:eq', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.set('inputValue', '1234');\n                _context.next = 3;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  {{eq inputValue '1234'}}\n                */\n                {\n                  id: \"hDOnYlb2\",\n                  block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[29,\\\"eq\\\",[[25,[\\\"inputValue\\\"]],\\\"1234\\\"],null],false]],\\\"hasEval\\\":false}\",\n                  meta: {}\n                }));\n\n              case 3:\n                assert.dom('*').hasText('true');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/tab-example.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tab-example.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/custom-class.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/custom-class.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/xtabs-example.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/xtabs-example.js should pass ESLint\\n\\n');\n  });\n});","define(\"dummy/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('dummy/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dummy/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('dummy/templates/components/tab-example.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dummy/templates/components/tab-example.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('dummy/templates/custom-class.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dummy/templates/custom-class.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('dummy/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dummy/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"dummy/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-pane-data-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-pane-data-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-pane-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-pane-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-panes-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-panes-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-tab-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-tab-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-tabs-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-tabs-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/x-tabs-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/x-tabs-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/helpers/eq-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/helpers/eq-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/mixins/component-child-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/component-child-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/mixins/component-parent-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/component-parent-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"dummy/tests/page-object\", [\"exports\", \"ember-cli-page-object\"], function (_exports, _emberCliPageObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"alias\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.alias;\n    }\n  });\n  Object.defineProperty(_exports, \"attribute\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.attribute;\n    }\n  });\n  Object.defineProperty(_exports, \"clickOnText\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.clickOnText;\n    }\n  });\n  Object.defineProperty(_exports, \"clickable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.clickable;\n    }\n  });\n  Object.defineProperty(_exports, \"collection\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.collection;\n    }\n  });\n  Object.defineProperty(_exports, \"contains\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.contains;\n    }\n  });\n  Object.defineProperty(_exports, \"count\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.count;\n    }\n  });\n  Object.defineProperty(_exports, \"create\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.create;\n    }\n  });\n  Object.defineProperty(_exports, \"fillable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.fillable;\n    }\n  });\n  Object.defineProperty(_exports, \"selectable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.fillable;\n    }\n  });\n  Object.defineProperty(_exports, \"focusable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.focusable;\n    }\n  });\n  Object.defineProperty(_exports, \"hasClass\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.hasClass;\n    }\n  });\n  Object.defineProperty(_exports, \"is\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.is;\n    }\n  });\n  Object.defineProperty(_exports, \"isHidden\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.isHidden;\n    }\n  });\n  Object.defineProperty(_exports, \"isPresent\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.isPresent;\n    }\n  });\n  Object.defineProperty(_exports, \"isVisible\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.isVisible;\n    }\n  });\n  Object.defineProperty(_exports, \"notHasClass\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.notHasClass;\n    }\n  });\n  Object.defineProperty(_exports, \"property\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.property;\n    }\n  });\n  Object.defineProperty(_exports, \"text\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.text;\n    }\n  });\n  Object.defineProperty(_exports, \"triggerable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.triggerable;\n    }\n  });\n  Object.defineProperty(_exports, \"value\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.value;\n    }\n  });\n  Object.defineProperty(_exports, \"visitable\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.visitable;\n    }\n  });\n  Object.defineProperty(_exports, \"buildSelector\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.buildSelector;\n    }\n  });\n  Object.defineProperty(_exports, \"findElementWithAssert\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.findElementWithAssert;\n    }\n  });\n  Object.defineProperty(_exports, \"findElement\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.findElement;\n    }\n  });\n  Object.defineProperty(_exports, \"getContext\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.getContext;\n    }\n  });\n  Object.defineProperty(_exports, \"fullScope\", {\n    enumerable: true,\n    get: function get() {\n      return _emberCliPageObject.fullScope;\n    }\n  });\n  _exports.default = void 0;\n  var _default = {\n    alias: _emberCliPageObject.alias,\n    attribute: _emberCliPageObject.attribute,\n    blurrable: _emberCliPageObject.blurrable,\n    clickOnText: _emberCliPageObject.clickOnText,\n    clickable: _emberCliPageObject.clickable,\n    collection: _emberCliPageObject.collection,\n    contains: _emberCliPageObject.contains,\n    count: _emberCliPageObject.count,\n    create: _emberCliPageObject.create,\n    fillable: _emberCliPageObject.fillable,\n    focusable: _emberCliPageObject.focusable,\n    hasClass: _emberCliPageObject.hasClass,\n    is: _emberCliPageObject.is,\n    isHidden: _emberCliPageObject.isHidden,\n    isPresent: _emberCliPageObject.isPresent,\n    isVisible: _emberCliPageObject.isVisible,\n    notHasClass: _emberCliPageObject.notHasClass,\n    property: _emberCliPageObject.property,\n    selectable: _emberCliPageObject.fillable,\n    text: _emberCliPageObject.text,\n    triggerable: _emberCliPageObject.triggerable,\n    value: _emberCliPageObject.value,\n    visitable: _emberCliPageObject.visitable\n  };\n  _exports.default = _default;\n  (true && !(false) && Ember.deprecate(\"Importing from \\\"test-support\\\" is now deprecated. Please import directly from the \\\"ember-cli-page-object\\\" module instead.\", false, {\n    id: 'ember-cli-page-object.import-from-test-support',\n    until: \"2.0.0\",\n    url: \"https://gist.github.com/san650/17174e4b7b1fd80b049a47eb456a7cdc#file-import-from-test-support-js\"\n  }));\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"@ember/test-helpers\", \"ember-qunit\", \"ember-cli-page-object/extend\"], function (_app, _environment, _testHelpers, _emberQunit, _extend) {\n  \"use strict\";\n\n  (0, _extend.useNativeEvents)();\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"dummy/tests/unit/mixins/component-child-test\", [\"ember-x-tabs/mixins/component-child\", \"qunit\"], function (_componentChild, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Mixin | component child', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      var ComponentChildObject = Ember.Object.extend(_componentChild.default);\n      var subject = ComponentChildObject.create();\n      assert.ok(subject);\n    });\n  });\n});","define(\"dummy/tests/unit/mixins/component-parent-test\", [\"ember-x-tabs/mixins/component-parent\", \"qunit\"], function (_componentParent, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Mixin | component parent', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      var ComponentParentObject = Ember.Object.extend(_componentParent.default);\n      var subject = ComponentParentObject.create();\n      assert.ok(subject);\n    });\n  });\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfjnvMA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}